package core.clock

#if (package runtime).Runtime != (package runtime).Runtime_Wasi {
    #error "'core.clock' is only available with the 'wasi' runtime.";
}

use package wasi

time :: () -> u64 {
    output_time: Timestamp;
    clock_time_get(.Realtime, 500000, ^output_time);
    return ~~(output_time / 1000000);
}

time_ns :: () -> u64 {
    output_time: Timestamp;
    clock_time_get(.Realtime, 1, ^output_time);
    return ~~output_time;
}

sleep :: proc {
    (seconds: u64)      { sleep(nanoseconds=seconds * 1000000000); },
    (milliseconds: u64) { sleep(nanoseconds=milliseconds * 1000000); },

    (nanoseconds: u64) {
        tagged: SubscriptionTagged;
        tagged.tag = .Clock;
        tagged.clock = .{
            id = .Realtime,
            timeout = cast(u64) nanoseconds,
            precision = 1,
            flags = ~~0,
        };

        subscription := Subscription.{
            userdata = 0,
            u = tagged,
        };

        event: Event;
        number_of_events: u32;

        error_code := poll_oneoff(^subscription, ^event, 1, ^number_of_events);
    }
}