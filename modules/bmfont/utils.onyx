package bmfont

#private_file math :: package core.math

@Incomplete // does not use the size parameter
get_width :: (use font: ^BMFont, text: str, size: f32) -> f32 {
    max_x := 0.0f;
    x := 0.0f;

    for char: text {
        if char == #char "\n" {
            max_x = math.max(max_x, x);
            x = 0.0f;
            continue;
        }

        glyph := font->get_glyph(char);

        if glyph == null {
            glyph = font->get_glyph(0);
        }

        x += ~~ glyph.xadvance * size;
    }

    return math.max(max_x, x);
}

get_height :: (use font: ^BMFont, text: str, size: f32) -> f32 {
    line_count := 0;

    for char: text {
        if char == #char "\n" {
            line_count += 1;
        }
    }

    return ~~(line_count + 1) * size * ~~font.common.line_height;

    // Old way that was wrong
    #if false {
        max_y := 0.0f;
        y := 0.0f;

        for char: text {
            if char == #char "\n" {
                y += max_y;
                max_y = 0;
                continue;
            }

            glyph := font->get_glyph(char);

            if glyph == null {
                glyph = font->get_glyph(0);
            }

            max_y = math.max(max_y, ~~glyph.h * size);
        }

        return y + max_y;
    }
}